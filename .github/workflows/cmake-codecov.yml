name: CMake Codecov

on: [ push ]

env:
  BUILD_TYPE: Debug

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install lcov
        shell: bash
        run: sudo apt-get install lcov -y

      - name: Create Build Environment
        run: cmake -E make_directory ${{github.workspace}}/build

      - name: Configure CMake
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        shell: bash
        working-directory: ${{github.workspace}}/build
        # Note the current convention is to use the -S and -B options here to specify source
        # and build directories, but this is only available with CMake 3.13 and higher.
        # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DPHTREE_CODE_COVERAGE=ON

      - name: Build
        working-directory: ${{github.workspace}}/build
        shell: bash
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: cmake --build . --config $BUILD_TYPE -j2

      - name: Test
        working-directory: ${{github.workspace}}/build
        shell: bash
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C $BUILD_TYPE

      - name: cd
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: cd test/CMakeFiles/all_tests.dir/

      - name: l1
        #working-directory: ${{github.workspace}}/build
        shell: bash
        run: lcov --directory . --capture -o coverage.info

      - name: l2
        #working-directory: ${{github.workspace}}/build
        shell: bash
        run: lcov -r coverage.info */build/* */test/* */c++/* */gtest/* -o coverageFiltered.info

      - name: l3
        #working-directory: ${{github.workspace}}/build
        shell: bash
        run: lcov --list coverageFiltered.info

#      - name: Upload Report to Codecov
#        uses: codecov/codecov-action@v3
#        with:
#          files: ./phtree.xml
#          fail_ci_if_error: true
#          functionalities: fix

      - name: curl
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: bash <(curl -s https://codecov.io/bash) -f coverageFiltered.info || echo "Codecov did not collect coverage reports"

