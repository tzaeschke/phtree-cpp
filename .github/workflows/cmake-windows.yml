name: CMake Windows build

on: [push, pull_request]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - uses: ilammy/msvc-dev-cmd@v1

 #   - name: Create Build Environment
  #    #run: cmake -E make_directory ${{github.workspace}}\build
 #     run: mkdir build

    - name: Create Build Environment3
      #run: cmake -E make_directory ${{github.workspace}}\build
      run: dir

#    - name: Create Build Environment2
      #run: cmake -E make_directory ${{github.workspace}}\build
    #  run: which

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
  #    shell: bash
 #     working-directory: ${{github.workspace}}\build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      #working-directory: ${{github.workspace}}\build
      #shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config ${env:BUILD_TYPE}

    - name: Test
      #working-directory: ${{github.workspace}}\build
      #shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      # TODO Currently tests are run via bazel only.
      run: ctest -C ${env:BUILD_TYPE}
